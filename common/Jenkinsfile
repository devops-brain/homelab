pipeline {
  agent {
    label "kubectl"
  }

  stages {
    stage('deploy demo environment'){
      steps {
        echo "Running ${env.BUILD_ID} on ${env.JENKINS_URL}"
        sh "#kubectl apply -f common/demo/mysql.yaml -f common/demo/wordpress.yaml --wait=true"
      }
    }
    stage('deploy monitoring'){
      steps {
        echo "Running ${env.BUILD_ID} on ${env.JENKINS_URL}"
        sh "helm repo add grafana https://grafana.github.io/helm-charts"
        sh "helm repo add prometheus-community https://prometheus-community.github.io/helm-charts"
        sh "helm repo update"
        sh "export HELM_DRIVER=configmap && helm upgrade -i --namespace monitoring --create-namespace prometheus-operator prometheus-community/kube-prometheus-stack"
      }
    }
    stage('deploy stackgres custom resource definitions'){
      steps {
        echo "Running ${env.BUILD_ID} on ${env.JENKINS_URL}"
        sh "kubectl apply -f 'https://sgres.io/install?namespace=stackgres&adminui-service-type=ClusterIP&grafana-autoEmbed=true'"
        sh "#helm repo add stackgres-charts https://stackgres.io/downloads/stackgres-k8s/stackgres/helm/"
        sh "#helm repo update"
        sh "#helm upgrade -i --namespace stackgres-operator --create-namespace stackgres-operator \
            #            --version 1.4 \
            #            --set grafana.autoEmbed=true \
            #            --set-string grafana.webHost=prometheus-operator-grafana.monitoring \
            #            --set-string grafana.secretNamespace=monitoring \
            #            --set-string grafana.secretName=prometheus-operator-grafana \
            #            --set-string grafana.secretUserKey=admin-user \
            #            --set-string grafana.secretPasswordKey=admin-password \
            #            --set-string adminui.service.type=ClusterIP \
            #            stackgres-charts/stackgres-operator"
        sh "kubectl describe deployment -n stackgres-operator stackgres-operator"
        sh "kubectl describe deployment -n stackgres-operator stackgres-restapi"
        sh "kubectl wait -n stackgres-operator deployment/stackgres-operator --for condition=Available"
        sh "kubectl wait -n stackgres-operator deployment/stackgres-restapi --for condition=Available"
      }
    }
  }
}