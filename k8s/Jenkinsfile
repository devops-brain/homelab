pipeline {
  agent {
    label "kubectl"
  }

  stages {
    stage('bootstrap cluster if missing'){
      steps {
        echo "Running ${env.BUILD_ID} on ${env.JENKINS_URL}"
        echo '''echo "if the model doesn't exist, bootstrap it"
              if [ "$(juju list-models | grep kube | wc -l)" == "0" ]; then
                  juju add-model kube HomeLab
                  juju model-config -m kube default-series=focal
                  juju add-machine -m kube nice-lark.khoyi.io
                  juju add-machine -m kube casual-corgi.khoyi.io
                  juju add-machine -m kube stable-owl.khoyi.io
                  juju add-machine -m kube nice-chimp.khoyi.io
                  juju add-machine -m kube loving-cattle.khoyi.io
                  juju add-machine -m kube golden-tiger.khoyi.io
                  juju add-machine -m kube new-machine.khoyi.io
              fi'''
      }
    }
    stage('update juju deployment'){
      steps {
        echo "Running ${env.BUILD_ID} on ${env.JENKINS_URL}"
        sh "##bash -c 'juju deploy -m kube --map-machines=existing charmed-kubernetes --channel 1.27/edge --overlay k8s/flannel.yaml --overlay k8s/changes.yaml'"
        sh "bash -c 'juju deploy -m kube --map-machines=existing charmed-kubernetes --channel 1.27/edge --overlay k8s/changes.yaml'"
        sh "./k8s/juju-block-io.sh"
        echo "I'll need to test if the kubernetes-master charm switches to active prematurely, but this should block IO until the deployment is complete."
      }
    }
    stage('post-deployment config'){
      steps {
        echo "Running ${env.BUILD_ID} on ${env.JENKINS_URL}"
        echo "TODO:  refactor"
        sh "mkdir -p ~/.kube"
        sh "juju scp kubernetes-control-plane/0:config ~/.kube/config"
      }
    }
  }
}